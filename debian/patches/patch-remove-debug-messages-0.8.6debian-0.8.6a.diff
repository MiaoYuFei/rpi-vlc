diff -puriN vlc-0.8.6/modules/access/rtsp/real.c vlc-0.8.6a/modules/access/rtsp/real.c
--- vlc-0.8.6/modules/access/rtsp/real.c	2006-09-18 12:28:25.000000000 +0200
+++ vlc-0.8.6a/modules/access/rtsp/real.c	2007-01-07 23:07:26.000000000 +0100
@@ -673,7 +673,7 @@ rmff_header_t  *real_setup_and_get_heade
   if( rtsp_read_data(rtsp_session, description, size) <= 0)
     goto error;
   description[size]=0;
-  fprintf(stderr, "%s", description);
+  //fprintf(stderr, "%s", description);
 
   /* parse sdp (sdpplin) and create a header and a subscribe string */
   subscribe = (char *) malloc(sizeof(char)*256);
diff -puriN vlc-0.8.6/modules/access/rtsp/rtsp.c vlc-0.8.6a/modules/access/rtsp/rtsp.c
--- vlc-0.8.6/modules/access/rtsp/rtsp.c	2006-09-18 12:28:25.000000000 +0200
+++ vlc-0.8.6a/modules/access/rtsp/rtsp.c	2007-01-07 23:07:26.000000000 +0100
@@ -142,7 +142,7 @@ static int rtsp_get_status_code( rtsp_cl
 
     if( i_code != 200 )
     {
-        fprintf( stderr, "librtsp: server responds: '%s'\n", psz_string );
+        //fprintf( stderr, "librtsp: server responds: '%s'\n", psz_string );
     }
 
     return i_code;
@@ -249,15 +249,15 @@ static int rtsp_get_answers( rtsp_client
           {
               if( strcmp( buf, rtsp->p_private->session ) )
               {
-                  fprintf( stderr, 
-                           "rtsp: warning: setting NEW session: %s\n", buf );
+                  //fprintf( stderr, 
+                  //         "rtsp: warning: setting NEW session: %s\n", buf );
                   free( rtsp->p_private->session );
                   rtsp->p_private->session = strdup( buf );
               }
           }
           else
           {
-              fprintf( stderr, "setting session id to: %s\n", buf );
+              //fprintf( stderr, "setting session id to: %s\n", buf );
               rtsp->p_private->session = strdup( buf );
           }
           free( buf );
@@ -422,7 +422,7 @@ int rtsp_read_data( rtsp_client_t *rtsp,
 
             if( seq < 0 )
             {
-                fprintf(stderr, "warning: cseq not recognized!\n");
+                //fprintf(stderr, "warning: cseq not recognized!\n");
                 seq = 1;
             }
 
@@ -515,13 +515,13 @@ int rtsp_connect( rtsp_client_t *rtsp, c
     }
 
     free( mrl_ptr );
-    fprintf( stderr, "got mrl: %s %i %s\n", s->host, s->port, s->path );
+    //fprintf( stderr, "got mrl: %s %i %s\n", s->host, s->port, s->path );
 
     s->s = rtsp->pf_connect( rtsp->p_userdata, s->host, s->port );
 
     if( s->s < 0 )
     {
-        fprintf(stderr, "rtsp: failed to connect to '%s'\n", s->host);
+        //fprintf(stderr, "rtsp: failed to connect to '%s'\n", s->host);
         rtsp_close( rtsp );
         return -1;
     }
diff -puriN vlc-0.8.6/modules/demux/nsv.c vlc-0.8.6a/modules/demux/nsv.c
--- vlc-0.8.6/modules/demux/nsv.c	2006-09-18 12:28:17.000000000 +0200
+++ vlc-0.8.6a/modules/demux/nsv.c	2007-01-07 23:07:06.000000000 +0100
@@ -449,7 +449,6 @@ static int ReadNSVs( demux_t *p_demux )
         return VLC_EGENERIC;
     }
 
-    msg_Dbg( p_demux, "new NSVs chunk" );
     /* Video */
     switch( ( fcc = VLC_FOURCC( header[4], header[5], header[6], header[7] ) ) )
     {
@@ -457,10 +456,11 @@ static int ReadNSVs( demux_t *p_demux )
         case VLC_FOURCC( 'V', 'P', '3', '1' ):
             fcc = VLC_FOURCC( 'V', 'P', '3', '1' );
             break;
+        case VLC_FOURCC( 'V', 'P', '6', '2' ):
         case VLC_FOURCC( 'N', 'O', 'N', 'E' ):
             break;
         default:
-            msg_Warn( p_demux, "unknown codec" );
+            msg_Warn( p_demux, "unknown codec %4.4s", (char *)&fcc );
             break;
     }
     if( fcc != VLC_FOURCC( 'N', 'O', 'N', 'E' ) && fcc != p_sys->fmt_video.i_codec  )
@@ -496,7 +496,7 @@ static int ReadNSVs( demux_t *p_demux )
         case VLC_FOURCC( 'N', 'O', 'N', 'E' ):
             break;
         default:
-            msg_Warn( p_demux, "unknown codec" );
+            msg_Warn( p_demux, "unknown codec %4.4s", (char *)&fcc );
             break;
     }
 
@@ -546,7 +546,7 @@ static int ReadNSVs( demux_t *p_demux )
         msg_Dbg( p_demux, "invalid fps (0x00)" );
         p_sys->i_pcr_inc = 40000;
     }
-    msg_Dbg( p_demux, "    - fps=%.3f", 1000000.0 / (double)p_sys->i_pcr_inc );
+    //msg_Dbg( p_demux, "    - fps=%.3f", 1000000.0 / (double)p_sys->i_pcr_inc );
 
     return VLC_SUCCESS;
 }
